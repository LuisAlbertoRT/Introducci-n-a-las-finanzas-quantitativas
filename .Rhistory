setwd("C:/Users/LUIS/Desktop/Proyectos en R")
getwd()
dir()
ls()
ls()
?ls()
View(Revo.version)
View(Revo.version)
peso
peso<-56
peso
altura<-1.61
altura
IMC<-peso/(altura**2)
IMC
genero<-c("h","m","m","h","m","h","m","h","m","m")
genero
edad<-c(23,45,34,39,60,52,44,59,32,40)
source('C:/Users/LUIS/Desktop/Proyectos en R/Ejercicios en R.R', echo=TRUE)
source('C:/Users/LUIS/Desktop/Proyectos en R/Ejercicios en R.R', echo=TRUE)
View(mispacientes)
?order
mispacientes[?order(mispacientes$edad),decreasing = FALSE]
mispacientes[?order(mispacientes$edad, decreasing = FALSE),]
mispacientes[?order(mispacientes$edad, decreasing = TRUE),]
mispacientes[?order(mispacientes$edad),]
mispacientes[order(mispacientes$edad),]
mispacientes[order(mispacientes$edad,decreasing = FALSE),]
mispacientes[order(mispacientes$edad,decreasing = TRUE),]
mispacientes[order(mispacientes$edad),]
glusemia<-c("123","230","180","164","210","220","193","202","152","185")
glusemia<-c("123","230","180","164","210","220","193","202","152","185")
t-orales<- c("no", "si", "no", "no", "si", "no", "si", "si", "no", "no")
glusemia<-c("123","230","180","164","210","220","193","202","152","185")
torales<- c("no", "si", "no", "no", "si", "no", "si", "si", "no", "no")
#Creamos una base de datos
mispacientes<- data.frame(genero,edad)
mispacientes
#ordenamos d
round(sd(edad),2)
quantile(edad)
source('C:/Users/LUIS/Desktop/Proyectos en R/Ejercicios en R.R', encoding = 'UTF-8', echo=TRUE)
install.packages("rugarch")
library(ggplot2)
ggplot(data=mispacientes,aes(edad,))
ggplot(data=mispacientes,aes(edad,density))+geom_line()
ggplot(data=mispacientes,aes(edad,density))+geom_line()
ggplot(data=mispacientes,aes(edad,density(edad)))+geom_line()
p <- ggplot(data=mispacientes,
aes(x=altura, y=value, colour=variable)) +
geom_line()
p <- ggplot(data=mispacientes,
aes(x=altura, y=value)) +
geom_line()
p <- ggplot(data=mispacientes,
aes(x=altura, y=value)) +
geom_line()
View(mispacientes)
p <- ggplot(data=mispacientes,
aes(x=edad, y=value)) +
geom_line()
p <- ggplot(data=mispacientes,
aes(x=edad, y=value)) +
geom_line()
p
p<- ggplot(data=mispacientes,
aes(x=edad, y=value)) +
geom_line()
ggplotly(p)
plot(p)
plotly(p)
ggplotly(p)
library(ggplot2)
ggplotly(p)
library(ggplot2)
ggplotly(p)
p<- ggplot(data=mispacientes,
aes(x=edad, y=value)) +
geom_line()
ggplotly(p)
View(p)
plot(edad,density)
plot(edad,)
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
install.packages(c("checkpoint", "class", "codetools", "jsonlite", "RUnit"))
View(Revo.version)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages(c("assertthat", "boot", "checkpoint", "chron", "class", "cli", "cluster", "codetools", "colorspace", "crayon", "curl", "digest", "doParallel", "expm", "fansi", "FNN", "ggplot2", "glue", "gtable", "isoband", "iterators", "kernlab", "KernSmooth", "ks", "labeling", "lattice", "lazyeval", "magrittr", "MASS", "Matrix", "mclust", "multicool", "mvtnorm", "nlme", "nloptr", "nnet", "numDeriv", "pillar", "pkgconfig", "plyr", "R6", "Rcpp", "RcppArmadillo", "reshape2", "rlang", "RODBC", "rpart", "rugarch", "scales", "spatial", "stringi", "stringr", "survival", "tibble", "utf8", "viridisLite", "withr", "xts", "zoo"))
install.packages(c("assertthat", "boot", "checkpoint", "chron", "class", "cli", "cluster", "codetools", "colorspace", "crayon", "curl", "digest", "doParallel", "expm", "fansi", "FNN", "ggplot2", "glue", "gtable", "isoband", "iterators", "kernlab", "KernSmooth", "ks", "labeling", "lattice", "lazyeval", "magrittr", "MASS", "Matrix", "mclust", "multicool", "mvtnorm", "nlme", "nloptr", "nnet", "numDeriv", "pillar", "pkgconfig", "plyr", "R6", "Rcpp", "RcppArmadillo", "reshape2", "rlang", "RODBC", "rpart", "rugarch", "scales", "spatial", "stringi", "stringr", "survival", "tibble", "utf8", "viridisLite", "withr", "xts", "zoo"))
install.packages(c("assertthat", "boot", "checkpoint", "chron", "class", "cli", "cluster", "codetools", "colorspace", "crayon", "curl", "digest", "doParallel", "expm", "fansi", "FNN", "ggplot2", "glue", "gtable", "isoband", "iterators", "kernlab", "KernSmooth", "ks", "labeling", "lattice", "lazyeval", "magrittr", "MASS", "Matrix", "mclust", "multicool", "mvtnorm", "nlme", "nloptr", "nnet", "numDeriv", "pillar", "pkgconfig", "plyr", "R6", "Rcpp", "RcppArmadillo", "reshape2", "rlang", "RODBC", "rpart", "rugarch", "scales", "spatial", "stringi", "stringr", "survival", "tibble", "utf8", "viridisLite", "withr", "xts", "zoo"))
("ggplot2")
library(ggplot2)
#Paqueterías necesarias
library(tidyquant) # Para descargar los datos
library(tidyr) # Permite manipular y transformar los datos
library(plotly) # Para hacer gráficos chulos
library(timetk) # Para manipular las series de tiempo
library(quantmod) # Para descargar los datos
library(xts) #Convertir dataframes en series de tiempo
library(tseries) #Trabajar con series de tiempo
library(forecast) #Pronosticar series de tiempo
library(timeSeries) #Trabajar con series de tiempo
library(tframePlus) #Trabajar con series de tiempo
library(ggplot2) #Gráficos coquetos
library(dplyr) #Gráficos coquetos y dinámicos
library(plotly) #Gráficos coquetos y dinámicos
library(hrbrthemes) #Elegir diferentes diseños para gráficos
library(ggthemes) #Elegir diferentes diseños para gráficos
library(tidyverse)  # Permite manipular y transformar los datos
library(dygraphs) #Gráficos dinámicos
library(gridExtra) #Gráficos dinámicos
install.packages(c("tidyquant", "tidyr", "plotly", "timetk", "quantmod", "xts", "tseries", "forecast", "timeSeries", "tframePlus", "plotly", "hrbrthemes"))
library(tidyquant) # Para descargar los datos
library(tidyr) # Permite manipular y transformar los datos
library(plotly) # Para hacer gráficos chulos
library(timetk) # Para manipular las series de tiempo
library(quantmod) # Para descargar los datos
library(xts) #Convertir dataframes en series de tiempo
library(tseries) #Trabajar con series de tiempo
library(forecast) #Pronosticar series de tiempo
library(timeSeries) #Trabajar con series de tiempo
library(tframePlus) #Trabajar con series de tiempo
library(ggplot2) #Gráficos coquetos
library(dplyr) #Gráficos coquetos y dinámicos
library(plotly) #Gráficos coquetos y dinámicos
library(hrbrthemes) #Elegir diferentes diseños para gráficos
library(ggthemes) #Elegir diferentes diseños para gráficos
library(tidyverse)  # Permite manipular y transformar los datos
library(dygraphs) #Gráficos dinámicos
library(gridExtra) #Gráficos dinámicos
library(tidyquant) # Para descargar los datos
library(tidyr) # Permite manipular y transformar los datos
library(plotly) # Para hacer gráficos chulos
library(timetk) # Para manipular las series de tiempo
library(quantmod) # Para descargar los datos
library(xts) #Convertir dataframes en series de tiempo
library(tseries) #Trabajar con series de tiempo
library(forecast) #Pronosticar series de tiempo
library(timeSeries) #Trabajar con series de tiempo
library(tframePlus) #Trabajar con series de tiempo
library(ggplot2) #Gráficos coquetos
library(dplyr) #Gráficos coquetos y dinámicos
library(plotly) #Gráficos coquetos y dinámicos
library(hrbrthemes) #Elegir diferentes diseños para gráficos
library(ggthemes) #Elegir diferentes diseños para gráficos
library(tidyverse)  # Permite manipular y transformar los datos
library(dygraphs) #Gráficos dinámicos
library(gridExtra) #Gráficos dinámicos
#--------------------Ejercicios en R---------------------------
#Comando para ver el directorio
getwd()
#Todos los archivo en la carpeta
dir()
#Variables creadas
ls()
#creamos la variable peso
peso<-56
peso
#Creamos la variable altura
altura<-1.61
altura
#Creamos la variabole IMC
IMC<-peso/(altura**2)
IMC
#Creamos vectores de variables
genero<-c("h","m","m","h","m","h","m","h","m","m")
genero
edad<-c(23,45,34,39,60,52,44,59,32,40)
edad
glusemia<-c("123","230","180","164","210","220","193","202","152","185")
torales<- c("no", "si", "no", "no", "si", "no", "si", "si", "no", "no")
#Creamos una base de datos
mispacientes<- data.frame(genero,edad)
mispacientes
#ordenamos de menor a mayor por edad
mispacientes[order(mispacientes$edad),]
#ordenamos de MAYOR a menor por edad
mispacientes[order(mispacientes$edad,decreasing = TRUE),]
max(edad) # nos muestra el valor máximo de edad
min(edad) # nos muestra el valor mínimo de edad
mean(edad) # nos muestra la media
sd(edad) # nos muestra la media
mean(edad) # nos muestra la media
round(sd(edad),2)# redondea la desviacion(y cualquier variable).
quantile(edad)#me da los cuantiles
barplot(mispacientes$edad)
mispacientes$colesterol <- c(230,241,190,150,201,278,262,190,220,184 )
mispacientes$colesterolrango[mispacientes$colesterol <= 200] <- '<=200'
mispacientes$colesterolrango[mispacientes$colesterol > 200 & mispacientes$colesterol <= 260] <- '201-260'
mispacientes$colesterolrango[mispacientes$colesterol >260] <- '>260'
a<-read.table("pacientes.txt",                 # Archivo de datos TXT indicado como string o ruta completa al archivo
header = TRUE,       # Si se muestra el encabezado (TRUE) o no (FALSE)
sep = "",             # Separador de las columnas del archivo
dec = ".")
names(mispacientes)
mispacientes
mispacientes[3]
mispacientes[3]
names(mispacientes)[3]
head(mispacientes)
tail(mispacientes)
mispacientes$genero
mispacientes[3,2]
mispacientes[3,2:3]
mispacientes[c(3,5), 2:3]
View(mispacientes)
mispacientes[c(3,5), 2,5]
mispacientes[c(3,5), 2:5]
mispacientes[c(3,5), 2:4]
mispacientes[c(3,5), 1,4]
mispacientes[c(3,5), 2:3]
mispacientes[,2:3]
#nos da todas las filas
mispacientes[,c(2,3)]
#nos da todas las filas
mispacientes[,c(2,4)]
#nos da todas las filas
mispacientes[,c(2,3)]
mispacientes[2,]
mispacientes[c(2,4), 2]
mispacientes[c(2,4), 2:3]
mispacientes[c(2,4), c(2)]
fumadores <- matrix(c(23, 134, 34, 167, 41, 130), ncol=2)
colnames(fumadores) <- c("Fumadores", "No fumadores")
rownames(fumadores) <- c("Obesos", "sobrepeso", "normal")
fumadores
fumadores <- matrix(c(23, 134, 34, 167, 41, 130), ncol=2)
View(fumadores)
colnames(fumadores) <- c("Fumadores", "No fumadores")
rownames(fumadores) <- c("Obesos", "sobrepeso", "normal")
fumadores
chisq.test(fumadores)
a<-as.data.frame(fumadores)
View(a)
a$Otra<-c("1","2","3")
View(a)
